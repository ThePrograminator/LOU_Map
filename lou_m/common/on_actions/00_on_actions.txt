#When adding effects directly in on_actions always consider if it would be best to do so through a scripted effect. on_actions with a lot of script in them are harder to get an overview of.

# country
on_startup = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_startup" }
    
    if = {
		limit = {
			is_emperor_of_china = yes
		}
		save_global_event_target_as = EmperorOfChina
	}
    
	events = {
		LOU_setup.1  # Global
		LOU_setup.3  # Flag Setup 
		LOU_setup.6  # Dwarven Hold Setup 
		LOU_setup.8  # Dwarven Hold Setup 

		LOU_erebor.1    # Setup Erebor - Eryn Galen
		LOU_durin_folk.1 # Setup Dale - Durin's Folk
		
		LOU_story.3 # Company of Thorin
		LOU_story.6 # Fellowship of the Ring
	}
	
	if = {
		limit = {
			NOT = {
				is_year = 2759
			}
		}

		middle_earth = {			
			limit = {				
				region = vales_of_anduin_region
				NOT = {					
					area = lothlorien_area
				}
			}
			add_province_modifier = {
				name = long_winter_mild
				duration = 152
				desc = long_winter_mild_tooltip
			}
		}
	}
		
	if = {
		limit = {
			NOT = {
				is_year = 2759
			}
		}

		middle_earth = {
			limit = {				
				superregion = eriador_superregion
				NOT = {
					region = enedhwaith_region
					region = dunland_region
					region = lindon_region
					region = forlindon_region
					region = harlindon_region
					area = mindolhendi_area
					province_id = 232
				}
			}
			add_province_modifier = {
				name = long_winter_normal
				duration = 152
				desc = long_winter_normal_tooltip
			}
		}
	}
			
	if = {
		limit = {
			NOT = {
				is_year = 2759
			}
		}

		middle_earth = {
			limit = {				
				OR = {
					superregion = rohan_superregion
					region = enedhwaith_region
					region = dunland_region
					region = old_pukel_land_region
				}
			}
			add_province_modifier = {
				name = long_winter_severe
				duration = 152
				desc = long_winter_severe_tooltip
			}
		}
	}


	if = {
		every_province = {
			limit = {
				culture_group = culture_group_hobbits
				OR = {
					has_terrain = unique_shire
					has_terrain = unique_east_farthing
					has_terrain = unique_michel_delving
					has_terrain = unique_bywater
					has_terrain = unique_hobbitton
					has_terrain = unique_waymeet
					has_terrain = unique_green_hill_country
					has_terrain = unique_nan_turnath
					has_terrain = unique_gladden_fields
					has_terrain = farmlands
					has_terrain = grasslands
				}
			}

			add_province_modifier = {
				name = halfling_farmers
				duration = -1
				desc = halfling_farmers_tooltip
			}
		}
	}

	if = {
		every_province = {
			limit = {
				culture_group = culture_group_drughu
				OR = {
					has_terrain = forest
					has_terrain = woods
					has_terrain = unique_old_forest
					has_terrain = unique_fangorn
					has_terrain = unique_lothloria
					has_terrain = unique_tom_bombadil
					has_terrain = unique_nan_nimrodel
					has_terrain = unique_cerin_amroth
					has_terrain = unique_caras_galadhon
					has_terrain = unique_egladil
					has_terrain = jungle
					has_terrain = unique_mirkwood
					has_terrain = unique_mirkwood_mild
					has_terrain = unique_mirkwood_west
					has_terrain = unique_mirkwood_mountains
					has_terrain = unique_mirkwood_settlement
					has_terrain = unique_gulduin
					has_terrain = unique_thalls
					has_terrain = unique_celebannon
					has_terrain = unique_wood_elven_town
					has_terrain = unique_halifirien
					has_terrain = unique_ithilien_north
					has_terrain = marsh
					has_terrain = hills
					has_terrain = mountain
					has_terrain = highlands
				}
			}

			add_province_modifier = {
				name = drughu_wildmen
				duration = -1
				desc = drughu_wildmen_tooltip
			}
		}
	}

	#if = {
	#	every_province = {
	#		limit = {
	#			culture = culture_half_trolls
	#			OR = {
	#				has_terrain = desert					
	#				has_terrain = savannah
	#				has_terrain = drylands				
	#				has_terrain = unique_harad_river
	#				has_terrain = unique_harnen_river					
	#				has_terrain = unique_dune_sea					
	#				has_terrain = unique_grasslands_desolate					
	#				has_terrain = unique_forodwaith
	#				has_terrain = unique_ice_cave
	#				has_terrain = unique_cave
	#				has_terrain = unique_tunnels
	#				has_terrain = unique_angmar_town
	#				has_terrain = unique_rhudaur
	#				has_terrain = unique_rhudaur_highlands
	#				has_terrain = unique_etten_vale
	#				has_terrain = hills
	#				has_terrain = highlands
	#				has_terrain = unique_orc_fortress
	#			}
	#		}
	#
	#		add_province_modifier = {
	#			name = half_trollmen_desert_nomads
	#			duration = -1
	#			desc = half_trollmen_desert_nomads_tooltip
	#		}
	#	}
	#}

	if = {
		every_province = {
			limit = {
				culture = culture_spider
			}

			add_province_modifier = {
				name = spider_webs
				duration = -1
			}
		}
	}
		
	if = {
		every_province = {
			limit = {
				OR = {
					culture = culture_ents
					culture = culture_huorn
				}
				OR = {
					has_terrain = forest
					has_terrain = woods
					has_terrain = unique_ice_cave
					has_terrain = unique_cave
					has_terrain = unique_tunnels
					has_terrain = unique_old_forest
					has_terrain = unique_fangorn
					has_terrain = unique_lothloria
					has_terrain = unique_tom_bombadil
					has_terrain = unique_nan_nimrodel
					has_terrain = unique_cerin_amroth
					has_terrain = unique_caras_galadhon
					has_terrain = unique_egladil
					has_terrain = jungle
					has_terrain = unique_mirkwood
					has_terrain = unique_mirkwood_mild
					has_terrain = unique_mirkwood_west
					has_terrain = unique_mirkwood_mountains
					has_terrain = unique_mirkwood_settlement
					has_terrain = unique_gulduin
					has_terrain = unique_thalls
					has_terrain = unique_celebannon
					has_terrain = unique_wood_elven_town
					has_terrain = unique_halifirien
					has_terrain = unique_ithilien_north
				}
			}

			add_province_modifier = {
				name = forest_huorns
				duration = -1
			}
		}
	}
}

# country
on_religion_change = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_religion_change" }
    
	set_against_race_opinions_effect = yes 
    set_free_peoples_opinions_effect = yes
    set_servants_of_darkness_opinions_effect = yes
}

# country.
on_secondary_religion_change = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_secondary_religion_change" }
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
	set_country_flag = helped_rebels_win_war
}

# country
on_colonial_liberation = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_colonial_reintegration" }
}

# country
on_colonial_reintegration = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_colonial_reintegration" }
}

# country
on_peace_actor = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_peace_actor" }
}

# country
on_peace_recipient = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_peace_recipient" }
}

# country
# root = winning country, from = loser country
on_war_won = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - winner : [Root.GetName] - loser : [From.GetName] - on_war_won" }
	ROOT = { 
		country_event = { id = LOU_dunedain.8 } 
		if = {
			limit = {
				ROOT = {
					OR = {
						technology_group = lotr_uruk_hai    
						is_orc = yes
						is_goblin = yes 
					}
					government = native
					NOT = {
						has_country_flag = MigratingOrcsWonWar_FLAG
					}
				}
				FROM = {
					NOT = {
						OR = {
							technology_group = lotr_uruk_hai    
							is_orc = yes
							is_goblin = yes 
						}
					}
					capital_scope = {
						region = cardolan_region
					}
				}
			}
			set_country_flag = MigratingOrcsWonWar_FLAG
		}
	}
	if = {
		limit = {
			FROM = {
				OR = {
					tag = X16
					tag = V95
				}
			}
			NOT = {
				has_global_flag = long_winter_war_north_finished_flag
			}
		}
		FROM = {
			country_event = {
				id = LOU_Long_Winter.2
			}
		}
	}
	
	if = {
		limit = {
			FROM = {
				OR = {
					tag = X01
					tag = X27
				}
			}
			NOT = {
				has_global_flag = long_winter_war_south_finished_flag
			}
		}
		FROM = {
			country_event = {
				id = LOU_Long_Winter.3
			}
		}
	}
    
    events = {
        LOU_empire_of_rhun.1
    }
	change_variable = {
		which = num_of_wars_won_var
		value = 1
    }
}

# country
# root = winning country, from = loser country
on_main_war_won = {
	on_main_war_won_effect = yes
	events = {
		#native_americans.7
		#flavor_kor.15
	}
}

# country
# root = winning country, from = loser country
on_separate_war_won = {
	
}

# country
# root = loser country, from = winner country
on_war_lost = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - winner : [From.GetName] - loser : [Root.GetName] - on_war_lost" }
	
    ROOT = {
		if = {
			limit = {
				has_country_modifier = the_one_ring_not_mordor
			}
			country_event = { id = LOU_fellowship_of_ring.35 }
		}
		else_if = {
			limit = {
				ROOT = {
					tag = Y16
				}
			}
			country_event = { id = LOU_wdo.6 } # War of the Dwarves and Orcs
		}
	}
    
    events = {
        LOU_empire_of_rhun.2
    }
	add_country_modifier = {
		name = just_lost_war_timer
		duration = 10
		hidden = yes
    }
}
on_main_war_lost = {
}
on_separate_war_lost = {
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - winner : [Root.GetName] - loser : [From.GetName] - on_battle_won_country" }
	on_battle_ended_effect = yes
	on_battle_won_country_effect = yes
    if = {
        limit = {
            is_emperor_of_china = yes
        }
        add_meritocracy = 1
    }
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	on_battle_ended_effect = yes
	battle_cult_spreading_effect = yes #Scripted effect for fetishist cult mechanics.

	ROOT = { country_event = { id = LOU_dunedain.6 } }
    
    # Empire of Rh�n
    if = {
        limit = {
            is_emperor_of_china = yes
        }
        add_meritocracy = -1
    }
}

# province
# root = location, from = loser country
on_battle_won_province = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - loser : [From.GetName] - on_battle_lost_country" }
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
	on_battle_lost_unit_effect = yes
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_added_to_trade_company" }
}

# province
# root = location, from = country doing it
on_removed_from_company ={
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_removed_from_company" }
}

# province
# root = location, from = country doing it
on_company_formed ={
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_company_formed" }
}

# province
# root = location, from = country doing it
on_company_disolved ={
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_company_disolved" }
}

# province
# root = location, from = winner country
on_battle_lost_province = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - winner : [From.GetName] - on_battle_lost_province" }
	if = {
		limit = {
			FROM = {
				has_government_attribute = battles_on_own_territory_bonus_tradition
			}
			owned_by = FROM
		}
		FROM = {
			add_army_tradition = 0.1
		}
	}
}

# country
# root = winning country, from = location
on_siege_won_country = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [From.GetName] - winner : [Root.GetName] - on_siege_won_country" }
	if = { 
		limit = {
			ROOT = {
				has_country_modifier = the_one_ring_not_mordor
			}
			FROM = {
				province_id = 46
			}
		}
		ROOT = {
			country_event = { id = LOU_fellowship_of_ring.29 }
		}
	}
	if = {
		limit = {
			FROM = {
				OR = {
					region = cardolan_region
					region = shire_region
				}
				
				NOT = {
					owned_by = ROOT
				}
			}
			ROOT = {
				OR = {
					technology_group = lotr_uruk_hai    
					is_orc = yes
					is_goblin = yes 
				}
				government = native
			}
		}
		ROOT = {
			country_event = { id = LOU_mission_migrating_orcs.1 }
		}
	}
	
	grant_manpower_from_besieging_fort = yes
	random_events = {
		10 = army_professionalism_events.1 #City Sacked
		100 = 0
	}
}

# country
# root = losing country, from = location
on_siege_lost_country = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [From.GetName] - loser : [Root.GetName] - on_siege_lost_country" }
}

# province
# root = location, from = losing country
on_siege_won_province = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - loser : [From.GetName] - on_siege_won_province" }
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - winner : [From.GetName] - on_siege_lost_province" }
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_abandon_colony" }
}

# province
# root = location, from = country that owns it
# Fired right after the great project is constructed
on_great_project_constructed = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_great_project_constructed" }
}

# OBS: Consider that the following on_actions can be called for Personal Union juniors as well.
# country
on_new_monarch = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_new_monarch" }
	if = {
		limit = {
			is_human = yes
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			is_human = yes
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}

	events = {
		#tribal_succession.1		# Harsh anti-tribals.
		#9492 					# Remove some event modifiers
		#muslim_school_events.20 #No Religious School
		LOU_dunedain.5 
        LOU_empire_of_rhun.3
        LOU_empire_of_rhun.4
        LOU_empire_of_rhun.5
	}
	random_events = {
		1000 = 0
		#50 = dynastic_events.4
		#50 = dynastic_events.5
	}
	
	on_new_monarch_effect = yes
	succession_culture_religion_effect = yes
}

on_new_consort = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_new_consort" }
	country_event = { id = lou_ruler.100 }
}

# country
on_monarch_death = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_monarch_death - [GetDate]" }
	on_monarch_death_effect = yes
	events = {
		LOU_dunedain.5 
		government_events.3	# Election of a new Ruler
	}
}

# country
on_regent = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_regent" }
}

# country
on_extend_regency = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_extend_regency" }
}

# country
on_new_term_election = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_new_term_election" }
	events = {
		LOU_Elections.1 # New Term
        LOU_Elections.4 # States General - New Term
	}
}

# country
on_death_election = {
	events = {
		LOU_Elections.2 # Death
        LOU_Elections.3 # Lottery 
        LOU_Elections.5 # States General - Death
	}
}

# country
on_death_foreign_slave_ruler = {

}

# country
on_replace_governor = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_replace_governor" }
}


# country
on_bankruptcy = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bankruptcy" }
}

# country (country annexing, root = target)
on_diplomatic_annex = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_diplomatic_annex" }
	events = {
		610 # Integrating FROMCOUNTRY
	}
}

# country
on_heir_death = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_heir_death" }
}

# country
on_queen_death = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_queen_death" }
}

# country
on_new_heir = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_new_heir" }
	country_event = { id = lou_ruler.101 days = 3 }
}

# country
on_weak_heir_claim = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_weak_heir_claim" }
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_heir_needed_theocracy" }
}

# Emperor from same dynasty
on_successive_emperor = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_successive_emperor" }
}

# Called whenever a new emperor is elected
# FROM = Previous Emperor
# ROOT = New Emperor 
on_emperor_elected = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_emperor_elected" }
	every_elector = {
		if = {
			limit = {
				preferred_emperor = root
			}
			change_variable = {
				which = supported_successive_emperors
				value = 1
			}
		}
		else = {
			set_variable = {
				which = supported_successive_emperors
				value = 0
			}
		}
	}

	emperor = {
		save_global_event_target_as = Emperor
	}
	if = {
		limit = { has_country_flag = got_promised_holstein_to_the_empire }
		clr_country_flag = got_promised_holstein_to_the_empire
	}
	FROM = {
		if = {
			limit = { has_country_modifier = diet_occupied }
			remove_country_modifier = diet_occupied
			ROOT = {
				add_country_modifier = { name = diet_occupied duration = -1 }
			}
		}
		if = {
			limit = {
				any_country = {
					reverse_has_opinion_modifier = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
			}
			every_country = {
				limit = {
					reverse_has_opinion_modifier = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
				reverse_remove_opinion = {
					modifier = opinion_imperial_diplomacy
					who = prev
				}
				ROOT = {
					add_opinion = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
			}
		}
	}
}

# HRE Prince released by the emperor
on_released_hre_member = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_released_hre_member" }
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_hre_member_false_religion" }
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_hre_member_true_religion" }
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_hre_wins_defensive_war" }
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_hre_member_annexed" }
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_hre_released_vassal" }
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_hre_transfered_vassal" }
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_hre_defense" }
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_hre_non_defense" }
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_hre_province_reconquest" }
}

on_lock_hre_religion = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_lock_hre_religion" }
}

on_change_hre_religion = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_change_hre_religion" }
}

on_hre_religion_white_peace = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_hre_religion_white_peace" }
}

# When a non-native changes government type
on_government_change = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_government_change" }
	on_government_change_effect = yes
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_integrate" }
}

# Nation annexed.
# FROM is the nation being annexed
on_annexed = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_annexed" }
    events = {
        LOU_empire_of_rhun.6 # Empire of Rh�n dismantled
        LOU_empire_of_rhun.7 # Claim Control of the Rh�n
	}
    on_annexed_estate_privileges_effect = yes
}

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - emperor: [From.GetName] - country: [Root.GetName] - on_chinese_empire_dismantled" }
    
    clear_global_event_target = EmperorOfChina
}

# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - old emperor: [From.GetName] - new emperor: [Root.GetName] - on_mandate_of_heaven_gained" }
    
    save_global_event_target_as = EmperorOfChina
    add_government_reform = empire_of_rhun_reform
	set_mandate = 60
	set_meritocracy = 60
    add_country_modifier = {
		name = warlord_of_the_rhun
		duration = 9125
	}
    rhun_region = {
		limit = {
			NOT = { is_core = ROOT }
		}
		add_permanent_claim = ROOT
	}
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - old emperor: [Root.GetName] - new emperor: [From.GetName] - on_mandate_of_heaven_lost" }
    
    remove_government_reform = empire_of_rhun_reform
    add_government_reform = easterling_clan_reform
    set_government_rank = 2
    
	add_country_modifier = {
		name = fallen_warlord
		duration = 7300
	}
    
    add_stability = -2
	rhun_region = {
		limit = {
			is_permanent_claim = ROOT
		}
		remove_claim = ROOT
	}
    if = {
		limit = {
			has_country_modifier = warlord_of_the_rhun
		}
		remove_country_modifier = warlord_of_the_rhun
	}
    
    if = {
        limit = {
            has_country_flag = formed_empire_of_rhun
        }
        clr_country_flag = formed_empire_of_rhun
        restore_country_name = ROOT
        remove_country_modifier = empire_of_rhun
    }
}

on_embrace_revolution = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_embrace_revolution" }
}

on_dismantle_revolution = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_dismantle_revolution" }
}

# province
on_adm_development = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_adm_development" }
	on_development_effect = { type = adm }
	if = {
		limit = {
			check_variable = {
				which = customui_province_status_variable
				value = 1
			}
		}
		customui_province_status_calculate_progression_effect = yes
	}
}

# province
on_dip_development = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_dip_development" }
	on_development_effect = { type = dip }
	if = {
		limit = {
			check_variable = {
				which = customui_province_status_variable
				value = 1
			}
		}
		customui_province_status_calculate_progression_effect = yes
	}
}

# province
on_mil_development = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_mil_development" }
	on_development_effect = { type = mil }
	if = {
		limit = {
			check_variable = {
				which = customui_province_status_variable
				value = 1
			}
		}
		customui_province_status_calculate_progression_effect = yes
	}
}

# THIS = Revolutionary country being beaten, FROM = Country enforcing the peace treaty
on_dismantle_revolution = {
	
}

on_overextension_pulse = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_overextension_pulse" }
	random_events = {
		100 = overextension.1
		100 = overextension.2
		100 = overextension.3
		100 = overextension.4
		100 = overextension.5
		100 = overextension.6
		100 = overextension.7
		100 = overextension.8
		100 = overextension.9
		100 = overextension.10
	}
}


on_colonial_pulse = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_colonial_pulse" }
	random_events = {
		100 = colonial.1
		100 = colonial.2
		100 = colonial.3
		100 = colonial.4
		100 = colonial.5
		100 = colonial.8
		100 = colonial.9
		100 = colonial.10
		100 = colonial.11
		100 = colonial.12
		100 = colonial.13
		100 = colonial.14
		100 = colonial.15
		100 = colonial.16
		100 = colonial.17
		100 = colonial.18
		25 = dodo.1

		15000 = 0
	}
}

on_siberian_pulse = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_siberian_pulse" }
}

# country random events
on_monthly_pulse = {
}
on_yearly_pulse = {
	
}
on_yearly_pulse_2 = {
}
on_yearly_pulse_3 = {
}
on_yearly_pulse_4 = {
}
on_yearly_pulse_5 = {
}

on_bi_yearly_pulse = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bi_yearly_pulse" }

	random_events = {
		100 = 5008
		100 = 5014
		100 = 5015
		100 = 5017
		100 = 5019
		100 = 5020
		100 = 5021
		100 = 5023
		100 = 5024
		100 = 5025
		100 = 5027
		100 = 5032
		100 = 5040
		100 = 5045
		100 = 5051
		100 = 5052
		100 = 5053
		100 = 5055
		100 = 5056
		100 = 5058
		100 = 5060
		100 = 5065
		100 = 5068
		100 = 5070
		100 = 5072
		100 = 5075
		100 = 5082
		100 = 5088
		100 = 5090
		100 = 5092
		100 = 5095
		100 = 5097
		100 = 6000
		100 = 6001
		100 = 6015
		100 = 714
		100 = 715
		100 = 717
		100 = 722
		100 = 723

		100 = random_event.7
		100 = random_event.16

		# Old Centralisation/Decentralisation
		100 = 806

		# Mercantilism
		100 = 6326
		100 = 6327
		100 = 6328
		100 = 6329

		# Tradegoods events
		100 = 6418
		100 = 6419
		100 = 6420
		100 = 6421
		100 = 6422
		100 = 6423
		100 = 6425
		100 = 6426
		100 = 6428
		100 = 6429

		2000 = 0
	}
}

on_bi_yearly_pulse_2 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bi_yearly_pulse_2" }
	random_events = {
		100 = corruption_event.1
		100 = corruption_event.2
		100 = corruption_event.3
		100 = corruption_event.4
		100 = corruption_event.5
		100 = corruption_event.6
		100 = corruption_event.7
		100 = corruption_event.8
		100 = corruption_event.9
		100 = corruption_event.10
		200 = corruption_event.11
		200 = corruption_event.12
		200 = corruption_event.13
		200 = corruption_event.14
		200 = corruption_event.15

		4000 = 0
	}
	
	if = {
		limit = {
			ROOT = {
				religion = religion_southern_followers_of_illuvatar
				culture_group = culture_group_numenorean
			}
		
			any_neighbor_country = {
				OR = {
					culture_group = culture_group_orcs
					culture_group = culture_group_melkor
				}
				is_racial_group_melkor = yes
			}
		}
		province_event = { id = LOU_dunedain.4 }
	}

}

on_bi_yearly_pulse_3 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bi_yearly_pulse_3" }
}

on_bi_yearly_pulse_4 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_bi_yearly_pulse_4" }
    
    random_events = {
        100 = LOU_estates.1 # Supremacy over Crown

		#all these were shifted from on_bi_yearly_pulse_1
		#randomevents
		100 = 737
		100 = 738
		100 = 742

		100 = 852
		100 = 859
		100 = 860
		100 = 861
		100 = 871
		100 = 873
		100 = 878
		100 = 879
		100 = 880
		100 = 836
		100 = 837

		100 = 9472
		100 = 5063
		100 = 6014

        2000 = 0
    }
}

on_bi_yearly_pulse_5 = {
	
}

# country random events
on_thri_yearly_pulse = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_thri_yearly_pulse" }
    
    # Neutral
	random_events = {
		75 = LOU_tradegoods.2
		75 = LOU_tradegoods.3
		75 = LOU_tradegoods.4
		
		1000 = 0
	}
}

on_thri_yearly_pulse_2 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_thri_yearly_pulse_2" }
    
    # Bad
    random_events = {
        75 = LOU_mordor.17
		75 = LOU_mordor.18
		75 = LOU_mordor.19
		75 = LOU_mordor.20
		75 = LOU_mordor.21
		75 = LOU_mordor.22
		75 = LOU_mordor.23
		75 = LOU_mordor.24
		75 = LOU_mordor.25
		75 = LOU_mordor.26
		
		75 = LOU_dol_guldur.3
		75 = LOU_dol_guldur.4
		75 = LOU_dol_guldur.5
  
        75 = LOU_orc_race.1
		75 = LOU_orc_race.2
		75 = LOU_orc_race.3
		75 = LOU_orc_race.4
		75 = LOU_orc_race.6
		75 = LOU_orc_race.8
		75 = LOU_orc_race.10
		75 = LOU_orc_race.11
		75 = LOU_orc_race.12
		75 = LOU_orc_race.13
        75 = LOU_orc_race.14
		75 = LOU_orc_race.15
		75 = LOU_orc_race.16
		75 = LOU_orc_race.17
		75 = LOU_orc_race.18
		75 = LOU_orc_race.19
		75 = LOU_orc_race.20
        
        2000 = 0
    }
}

on_thri_yearly_pulse_3 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_thri_yearly_pulse_3" }
    
    # Good
    random_events = {
		75 = LOU_gondor.1
		75 = LOU_gondor.2
		75 = LOU_gondor.3
		75 = LOU_gondor.4
		75 = LOU_gondor.5
		75 = LOU_gondor.6
		75 = LOU_gondor.9
		75 = LOU_gondor.10
		
		75 = LOU_dol_amroth.1
		75 = LOU_dol_amroth.2
		75 = LOU_dol_amroth.3
		75 = LOU_dol_amroth.5
		75 = LOU_dol_amroth.6
		
		75 = LOU_gondorian_culture.1
		75 = LOU_gondorian_culture.2
		75 = LOU_gondorian_culture.3
		75 = LOU_gondorian_culture.4
		75 = LOU_gondorian_culture.5
		75 = LOU_gondorian_culture.6
		75 = LOU_gondorian_culture.7
		75 = LOU_gondorian_culture.9

		75 = LOU_dunedain.1
		75 = LOU_dunedain.2
		75 = LOU_dunedain.3
		
		75 = LOU_dunedain.7
		75 = LOU_dunedain.9
		75 = LOU_dunedain.10
        
		2000 = 0
	}
}

on_thri_yearly_pulse_4 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_thri_yearly_pulse_4" }
}

on_four_year_pulse = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_four_year_pulse" }
}

on_four_year_pulse_2 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_four_year_pulse_2" }
}

on_four_year_pulse_3 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_four_year_pulse_3" }
}

on_four_year_pulse_4 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_four_year_pulse_4" }
}

on_five_year_pulse = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_five_year_pulse" }
	random_events = {
		# Aristocracy 		13  (8g 5b)
		100 = ideagroups.100
		100 = ideagroups.101
		100 = ideagroups.102
		100 = ideagroups.103
		100 = ideagroups.104
		100 = ideagroups.105
		100 = ideagroups.106
		100 = ideagroups.107
		100 = ideagroups.108
		100 = ideagroups.109
		100 = ideagroups.110
		100 = ideagroups.111
		100 = ideagroups.112


		# Plutocracy 		19 (12g 7b)
		100 = ideagroups.200
		100 = ideagroups.201
		100 = ideagroups.202
		100 = ideagroups.203
		100 = ideagroups.204
		100 = ideagroups.205
		100 = ideagroups.206
		100 = ideagroups.207
		100 = ideagroups.208
		100 = ideagroups.209
		100 = ideagroups.210
		100 = ideagroups.211
		100 = ideagroups.212
		100 = ideagroups.213
		100 = ideagroups.214
		100 = ideagroups.215
		100 = ideagroups.216
		100 = ideagroups.217
		100 = ideagroups.218

		# Innovativenes		11 (7g 4b)
		100 = ideagroups.300
		100 = ideagroups.301
		100 = ideagroups.302
		100 = ideagroups.303
		100 = ideagroups.304
		100 = ideagroups.305
		100 = ideagroups.307
		100 = ideagroups.308
		100 = ideagroups.309
		100 = ideagroups.310

		# Religious		18 (11g 7b)
		100 = ideagroups.402
		100 = ideagroups.403
		100 = ideagroups.404
		100 = ideagroups.405
		100 = ideagroups.406
		100 = ideagroups.407
		100 = ideagroups.408
		100 = ideagroups.409
		100 = ideagroups.411
		100 = ideagroups.412
		100 = ideagroups.413
		100 = ideagroups.414
		100 = ideagroups.415
		100 = ideagroups.416
		100 = ideagroups.417


		# Spy			9 (6g 3b)
		100 = ideagroups.500
		100 = ideagroups.501
		100 = ideagroups.502
		100 = ideagroups.503
		100 = ideagroups.504
		100 = ideagroups.505
		100 = ideagroups.506
		100 = ideagroups.507
		100 = ideagroups.508


		# Diplomatic		9 (6g 3b)
		100 = ideagroups.600
		100 = ideagroups.601
		100 = ideagroups.602
		100 = ideagroups.603
		100 = ideagroups.604
		100 = ideagroups.606
		100 = ideagroups.607
		100 = ideagroups.608


		# Offensive 		14 (9g 5b)
		100 = ideagroups.700
		100 = ideagroups.701
		100 = ideagroups.702
		100 = ideagroups.703
		100 = ideagroups.704
		100 = ideagroups.705
		100 = ideagroups.706
		100 = ideagroups.707
		100 = ideagroups.708
		100 = ideagroups.709
		100 = ideagroups.710
		100 = ideagroups.711
		100 = ideagroups.712
		100 = ideagroups.713


		# Defensive		11 (5g 6b)
		100 = ideagroups.800
		100 = ideagroups.801
		100 = ideagroups.802
		100 = ideagroups.803
		100 = ideagroups.804
		100 = ideagroups.805
		100 = ideagroups.806
		100 = ideagroups.807
		100 = ideagroups.808
		100 = ideagroups.809
		100 = ideagroups.810
		100 = ideagroups.811
		100 = ideagroups.812
		100 = ideagroups.813
		100 = ideagroups.814
		100 = ideagroups.815


		# Trade			6 (7g 4b)
		100 = ideagroups.900
		100 = ideagroups.901
		100 = ideagroups.902
		100 = ideagroups.903
		100 = ideagroups.904
		100 = ideagroups.905
		100 = ideagroups.906
		100 = ideagroups.907
		100 = ideagroups.908
		100 = ideagroups.909
		100 = ideagroups.910

		# Maritime			22 (14g 8b)
		100 = ideagroups.1000
		100 = ideagroups.1001
		100 = ideagroups.1002
		100 = ideagroups.1003
		100 = ideagroups.1004
		100 = ideagroups.1005
		100 = ideagroups.1006
		100 = ideagroups.1007
		100 = ideagroups.1008
		100 = ideagroups.1009
		100 = ideagroups.1010
		100 = ideagroups.1011
		100 = ideagroups.1012
		100 = ideagroups.1013
		100 = ideagroups.1014
		100 = ideagroups.1015
		100 = ideagroups.1016
		100 = ideagroups.1017
		100 = ideagroups.1018
		100 = ideagroups.1019
		100 = ideagroups.1020
		100 = ideagroups.1021

		# Economic		11 (7g 4b)
		100 = ideagroups.1100
		100 = ideagroups.1101
		100 = ideagroups.1102
		100 = ideagroups.1103
		100 = ideagroups.1104
		100 = ideagroups.1105
		100 = ideagroups.1106
		100 = ideagroups.1107
		100 = ideagroups.1108
		100 = ideagroups.1109
		100 = ideagroups.1110

		# # Exploration		11 (7g 4b)
		# 100 = ideagroups.1200
		# 100 = ideagroups.1201

		# Quality		11 (7g 4b)
		100 = ideagroups.1300
		100 = ideagroups.1301
		100 = ideagroups.1302
		100 = ideagroups.1303
		100 = ideagroups.1304
		100 = ideagroups.1305
		100 = ideagroups.1306
		100 = ideagroups.1307
		100 = ideagroups.1308
		100 = ideagroups.1309
		100 = ideagroups.1310

		# Quantity		11 (7g 4b)
		100 = ideagroups.1400
		100 = ideagroups.1401
		100 = ideagroups.1402
		100 = ideagroups.1403
		100 = ideagroups.1404
		100 = ideagroups.1405
		100 = ideagroups.1406
		100 = ideagroups.1407
		100 = ideagroups.1408
		100 = ideagroups.1409
		100 = ideagroups.1410

		# Administrative	3 (1g 2b)
		100 = ideagroups.1600
		100 = ideagroups.1601
		100 = ideagroups.1602
		100 = ideagroups.1603
		100 = ideagroups.1604
		100 = ideagroups.1605
		100 = ideagroups.1606
		100 = ideagroups.1607
		100 = ideagroups.1608
		100 = ideagroups.1609
		100 = ideagroups.1610

		# Naval		11 (7g 4b)
		100 = ideagroups.1700
		100 = ideagroups.1701
		100 = ideagroups.1702
		100 = ideagroups.1703
		100 = ideagroups.1704
		100 = ideagroups.1705
		100 = ideagroups.1706
		100 = ideagroups.1707
		100 = ideagroups.1708
		100 = ideagroups.1709
		100 = ideagroups.1710

		# Influence		11 (7g 4b)
		100 = ideagroups.1800
		100 = ideagroups.1801
		100 = ideagroups.1802
		100 = ideagroups.1803
		100 = ideagroups.1804
		100 = ideagroups.1805
		100 = ideagroups.1806
		100 = ideagroups.1807
		100 = ideagroups.1808
		100 = ideagroups.1809
		100 = ideagroups.1810

		# Humanist		11 (7g 4b)
		100 = ideagroups.1900
		100 = ideagroups.1901
		100 = ideagroups.1902
		100 = ideagroups.1903
		100 = ideagroups.1904
		100 = ideagroups.1905
		100 = ideagroups.1906
		100 = ideagroups.1907
		100 = ideagroups.1909
		100 = ideagroups.1910

		1000 = 0
	}

}


# Estates pulse
on_five_year_pulse_2 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_five_year_pulse_2" }
	random_events = {
		# Burghers
		100 = burghers_estate_events.1
		100 = burghers_estate_events.2
		100 = burghers_estate_events.3
		100 = burghers_estate_events.4
		100 = burghers_estate_events.5
		100 = burghers_estate_events.7
		100 = burghers_estate_events.8
		400 = burghers_estate_events.10 #Demands
		100 = burghers_estate_events.11 #Bonus
		100 = burghers_estate_events.12
		100 = burghers_estate_events.13
		400 = burghers_estate_events.14 #Demands
		100 = burghers_estate_events.15 #Disloyal
		# Nobles
		100 = nobles_estate_events.1 #Demands
		100 = nobles_estate_events.2
		100 = nobles_estate_events.3
		100 = nobles_estate_events.4
		400 = nobles_estate_events.5 #Demands
		100 = nobles_estate_events.6
		100 = nobles_estate_events.7
		400 = nobles_estate_events.8 #Disloyal
		50 = nobles_estate_events.10
		100 = nobles_estate_events.11 #Bonus
		# Tribes
		100 = tribal_estate_events.1
		100 = tribal_estate_events.2
		100 = tribal_estate_events.3
		100 = tribal_estate_events.4
		100 = tribal_estate_events.5
		100 = tribal_estate_events.6
		100 = tribal_estate_events.7
		100 = tribal_estate_events.8
		100 = tribal_estate_events.9
		150 = tribal_estate_events.11 #Demands
		150 = tribal_estate_events.12 #Demands
		150 = tribal_estate_events.13 #Demands
		150 = tribal_estate_events.14 #Demands

		1000 = 0
	}
}

on_five_year_pulse_3 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_five_year_pulse_3" }
}

on_five_year_pulse_4 = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_five_year_pulse_4" }
}

# El Dorado
# FROM = country doing the exploring, ROOT = province discovered
on_explore_coast = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_explore_coast" }
}
on_conquistador_empty = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_conquistador_empty" }
}

on_conquistador_native = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_conquistador_native" }
}

on_buy_religious_reform = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_buy_religious_reform" }
}

on_circumnavigation = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_circumnavigation" }
}

on_become_free_city = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_become_free_city" }
}

on_remove_free_city = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_remove_free_city" }
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_revoke_estate_land_ai" }
    
    add_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
}

on_revoke_estate_land = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_revoke_estate_land" }
    
    add_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
}

on_revoke_estate_land_ai_post = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_revoke_estate_land_ai_post" }
    
	add_local_autonomy = 25
}
on_revoke_estate_land_post = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_revoke_estate_land_post" }
    
	add_local_autonomy = 25
}

on_grant_estate_land = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_grant_estate_land" }
    
    if = {
		limit = {
			has_province_modifier = revoked_estate_modifier
		}
		remove_province_modifier = revoked_estate_modifier
	}
}

on_death_has_harem = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_death_has_harem" }
}

on_select_heir_from_harem = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_select_heir_from_harem" }
}

on_fetishist_cult_change = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_fetishist_cult_change" }
}

# country
on_gain_great_power_status = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_gain_great_power_status" }
    
	if = {
		limit = {
			NOT = { has_country_flag = became_great_power_flag }
		}
		set_country_flag = became_great_power_flag
	}
}

# country
on_lose_great_power_status = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_lose_great_power_status" }
}

# province
on_province_religion_converted = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_province_religion_converted" }
    
	on_province_religion_changed_effect = yes
	on_province_religion_converted_effect = yes

	if = {
		limit = {
			OR = {
				culture_group = culture_group_orcs
				culture_group = culture_group_melkor
			}
			
			NOT = {
				OR = {
					religion = religion_servants_of_sauron
					religion = religion_servants_of_morgoth
				}
			}
		}
		change_culture = owner
	}
	else_if = {
		limit = {
			NOT = {
				OR = {
					culture_group = culture_group_orcs
					culture_group = culture_group_melkor
				}
			} 

			OR = {
				religion = religion_servants_of_sauron
				religion = religion_servants_of_morgoth
			}
		}
		change_culture = owner
	}
}

on_province_religion_changed = {
	on_province_religion_changed_effect = yes
}

# province, manually conversion
on_province_culture_converted = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_province_culture_converted" }
	on_province_culture_converted_estate_privilges_effect = yes
	on_province_culture_change_effect = yes
	on_province_culture_converted_effect = yes
}

# province, general conversion through effects
on_province_culture_changed = {
	on_province_culture_converted_estate_privilges_effect = yes
	on_province_culture_change_effect = yes
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - owner : [Owner.GetName] - old owner : [From.GetName] - on_convert_by_trade_policy" }
	on_convert_by_trade_policy_effect = yes
}

# province
# FROM = old owner
on_province_owner_change = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - owner : [Owner.GetName] - old owner : [From.GetName] - on_province_owner_change" }
	on_province_owner_change_government_effect = yes

	if = {
		limit = {
			NOT = {
				owner = {
					has_country_modifier = the_eriadorian_posibilities
				}
			}
			
			OR = {
				AND = {
					region = cardolan_region
				}
				AND = {
					OR = {
						region = eregion_region
						area = ethir_gwathlo_area
						area = cairg_erp_area
						area = andhas_area
						area = swanfleet_area
						region = rhudaur_region
						region = sirranwaith_region
						area = dor_i_tinuviel_area
					}
					has_port = yes
				}
			}
		}
		if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - on_province_owner_change - Call event lou_colonization.1" }
		owner = {
			country_event = {
				id = lou_colonization.1
			}
		}
	}

	if = {
		limit = {
			owner = {
				has_country_modifier = the_eriadorian_posibilities
			}
			OR = {
				AND = {
					region = cardolan_region
				}
				AND = {
					OR = {
						region = eregion_region
						area = ethir_gwathlo_area
						area = cairg_erp_area
						area = andhas_area
						area = swanfleet_area
						region = rhudaur_region
						region = sirranwaith_region
						area = dor_i_tinuviel_area
					}
					has_port = yes
				}
			}
		}
		if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - on_province_owner_change - Call event lou_colonization.2" }
		FROM = {
			country_event = {
				id = lou_colonization.2
			}
		}
	}
	if = {
		limit = {
			ROOT = {
				province_id = 1875
			}
			owner = {
				NOT = {
					tag = Z01
				}
			}
			Y80 = {
				exists = yes
			}
		}
		Y80 = {
			country_event = {
				id = LOU_mission_rivendell.5
			}
		}
	}

	if = {
		limit = {
			is_capital = no
			province_human_has_capital_buildings = yes
		}
		remove_building = capital_1_building
		remove_building = capital_2_building
		remove_building = capital_3_building

		add_latest_human_building = {
			city = yes
			builder = ROOT
		}
	}
	if = {
		limit = {
			is_capital = no
			province_dwarf_has_capital_buildings = yes
		}
		remove_building = capital_1_dwarf_building
		remove_building = capital_2_dwarf_building
		remove_building = capital_3_dwarf_building

		add_latest_dwarf_building = {
			fortress = yes
			builder = ROOT
		}
	}
	if = {
		limit = {
			is_capital = no
			province_elf_has_capital_buildings = yes
		}
		remove_building = capital_1_elf_building
		remove_building = capital_2_elf_building
		remove_building = capital_3_elf_building

		add_latest_elf_building = {
			city = yes
			builder = ROOT
		}
	}

	if = {
		limit = {
			is_capital = no
			province_orc_has_capital_buildings = yes
		}
		remove_building = capital_1_orc_building
		remove_building = capital_2_orc_building
		remove_building = capital_3_orc_building

		add_latest_orc_building = {
			city = yes
			builder = ROOT
		}
	}

	if = {
		limit = {
			has_province_flag = customui_province_status_removing_status_flag
			check_variable = {
				which = customui_province_status_variable
				value = 1
			}
		}
		customui_province_status_stop_removal_effect = yes
	}
}

# country
on_parliament_debate_reset = {
	on_parliament_debate_reset_effect = yes
}

#province
on_parliament_seat_given = {
	on_parliament_seat_given_effect = yes
}

#province
on_parliament_seat_lost = {
	on_parliament_seat_lost_effect = yes
}

# country
on_parliament_debate_failed = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_parliament_debate_failed" }
	on_parliament_debate_failed_effect = yes
}

# country
on_parliament_debate_succeeded = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_parliament_debate_succeeded" }
	on_parliament_debate_succeeded_effect = yes
	increase_issue_passed_counter = yes
}

# country
on_harmonized_pagan = {
	
}
on_harmonized_christian = {

}
on_harmonized_muslim = {

}
on_harmonized_jewish_group = {

}
on_harmonized_zoroastrian_group = {

}
on_harmonized_dharmic = {

}
on_harmonized_mahayana = {

}
on_harmonized_buddhism = { #Theravada

}
on_harmonized_shinto = {

}
on_harmonized_vajrayana = {

}

# country
on_russian_sudebnik = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_russian_subednik" }
}

# country
on_russian_oprichnina = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_russian_oprichnina" }
}

# country
on_russian_streltsy = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_russian_streltsy" }
}

# province
on_consecrate_patriarch = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - country : [From.GetName] - on_consecrate_patriarch" }
}

# country. from = overlord
on_accept_tribute = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_accept_tribute" }
}

# country. from = overlord
on_refuse_tribute = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_refuse_tribute" }
}

# country
on_leader_recruited = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_leader_recruited" }
}

# country
on_general_recruited = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_general_recruited" }
	on_general_recruited_effect = yes
}

# country
on_admiral_recruited = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_admiral_recruited" }
}

# country
on_conquistador_recruited = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_conquistador_recruited" }
}

# country
on_explorer_recruited = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_explorer_recruited" }
}

# THIS = Province, FROM = Country
on_regiment_recruited = {

}

# THIS = Province, FROM = Country, ROOT = Merc Unit
on_mercenary_recruited = {
	on_mercenary_recruited_effect = yes
	}
# THIS = One province in the state
on_add_pasha = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_add_pasha" }
}

# THIS = One province in the state
on_remove_pasha = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_remove_pasha" }
}

# THIS = Province
on_janissaries_raised = {
}

on_cawa_raised = {
}

on_carolean_raised = {
}

on_hussars_raised = {
}

on_revolutionary_guard_raised = {
}

on_banner_raised = {
	owner = { 
		if = { 
			limit = { has_country_flag = refund_partial_corruption_on_banner_recruited_flag }
			add_corruption = -0.04
		}
	}
}

on_cossack_raised = {
}

on_marine_raised = {
}

on_rajput_raised = {
}

on_streltsy_raised = {
}

on_tercio_raised = {
}

on_musketeer_raised = {
}

on_samurai_raised = {
}

on_qizilbash_raised = {
}

on_mamluks_raised = {
}

on_geobukseon_raised = {
}

on_man_of_war_raised = {
}

on_galleon_raised = {
}

on_galleass_raised = {
}

on_caravel_raised = {
}

on_voc_indiamen_raised = {
}

on_hre_reform_passed = {
}

on_mandate_reform_passed = {
	if = {
		limit = { has_country_flag = qng_passing_decree_reduces_autonomy_everywhere_by_5_flag } 
		every_owned_province = {
			add_local_autonomy = -10
		}
	}
}

on_reform_enacted = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_reform_enacted" }
}

on_reform_changed = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_reform_changed" }
}

on_trade_company_investment = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_trade_company_investment" }
}

on_center_of_trade_upgrade = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_center_of_trade_upgrade" }
}

on_center_of_trade_downgrade = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_center_of_trade_downgrade" }
}

on_culture_promoted = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_culture_promoted" }
	on_culture_promoted_estate_privileges_effect = yes
}

on_culture_demoted = {
	on_culture_demoted_estate_privileges_effect = yes
	on_culture_demoted_effect = yes
}

on_primary_culture_changed = {
	on_primary_culture_changed_effect = yes
	on_primary_culture_changed_privileges_effect = yes
}

# FROM = Previous Country, ROOT = Province
on_company_chartered = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_company_chartered" }
}

# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_dependency_gained" }
	on_dependency_gained_effect = yes
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_dependency_lost" }
	on_dependency_lost_effect = yes
}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_create_vassal" }
	on_religion_change_estate_privileges_effect = yes
}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_holy_order_established" }
}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_minority_expelled" }
}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - on_raid_coast" }
	if = {
		limit = {
			has_government_attribute = raiding_increases_pp
		}
		add_power_projection = {
			type = high_sea_power_projection
			amount = 1
		}
	}
}

# ROOT = Tag that captured the flagship, FROM = Tag that lost the flagship
on_flagship_captured = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_flagship_captured" }
    
    FROM = {
		set_country_flag = captured_flagship_country_flag
	}
}

# ROOT = Tag that destroyed the flagship, FROM = Tag that lost the flagship
on_flagship_destroyed = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_flagship_destroyed" }
    
    FROM = {
		set_country_flag = sunk_flagship_country_flag
	}
}

# this = Released country, FROM = Releasing country
on_country_released = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - [FROM.GetName] - on_country_released" }
}

# ROOT = province, FROM = country
on_trade_good_changed = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_trade_good_changed" }
    
    on_trade_good_changed_estate_privileges_effect = yes
	on_trade_good_changed_government_effect = yes
}

# this = country
on_loan_repaid = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_loan_repaid" }
    
    on_loan_repaid_estate_privileges_effect = yes
}

# this = country
on_rebels_break_country = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_rebels_break_country" }
    
	add_country_modifier = {
		name = just_lost_to_rebels
		duration = 10
		hidden = yes
	}
}

# this = country
## Fires when you fire or replace your ADM advisor, in the moment before they are actually removed from their post.
## Note: Defining a new advisor here will result in the shortest appointment in history. Use on_post_adm_advisor_fired instead :)
on_pre_adm_advisor_fired = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_pre_adm_advisor_fired" }
    
	if = {
		limit = {
			has_country_flag = need_to_fire_adm_advisor
		}
		set_country_flag = just_fired_adm_advisor
		remove_advisor_by_category_no_action = ADM
	}
}

# this = country
on_pre_dip_advisor_fired = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_pre_dip_advisor_fired" }
    
	if = {
		limit = {
			has_country_flag = need_to_fire_dip_advisor
		}
		set_country_flag = just_fired_dip_advisor
		remove_advisor_by_category_no_action = DIP
	}
}

# this = country
on_pre_mil_advisor_fired = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_pre_mil_advisor_fired" }
    
	if = {
		limit = {
			has_country_flag = need_to_fire_mil_advisor
		}
		set_country_flag = just_fired_mil_advisor
		remove_advisor_by_category_no_action = MIL
	}
}

# this = country
on_post_adm_advisor_fired = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_post_adm_advisor_fired" }
	on_advisor_removed_effct = { type = adm }
}

# this = country
on_post_dip_advisor_fired = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_post_dip_advisor_fired" }
	on_advisor_removed_effct = { type = dip }
}

# this = country
on_post_mil_advisor_fired = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_post_mil_advisor_fired" }
	on_advisor_removed_effct = { type = mil }
}

# this = new client state, from = parent country
on_create_client_state = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_create_client_state" }
}

# this = new target, from = previous target (both can be non-existent tag)
on_change_revolution_target = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_change_revolution_target" }
}

# this = curia controller (enactor of the bull)
on_golden_bull_enacted = {
	set_country_flag = enacted_golden_bull
}


# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = { 
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_conquest" }
    
	on_conquest_effect = yes
}

on_country_creation = {
    if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - [Root.GetName] - on_country_creation" }
    
}

on_federation_leader_change = {
	if = {
		limit = { tag = FROM }
		disband_federation = THIS
	}
	else = {
		# New strongest member becomes the new federation leader
		set_federation_leader = THIS
	}
}

#FROM = country pillaged, ROOT = country doing the pillaging
on_pillaged_capital = {
	slave_raid_pillage_capital_effect = yes
}

#FROM = country dev was transferred from, ROOT = country doing the transferring. It is triggered by normal concentrate too though FROM isn't set in that case
on_transfer_development = {
}
#FROM = overlord, ROOT - colony
on_colonial_type_change = {
	clr_country_flag = encourage_cash_crops_flag
}

on_estate_led_regency = {
}

on_estate_led_regency_surpassed = {
	
}

on_extended_regency = {
	#random_events = {
	#	100 = extended_regency_events.4
	#	100 = extended_regency_events.5
	#	100 = extended_regency_events.6
	#	
	#	300 = 0
	#}
}

on_estate_removed = {

}

##scope = colony province, FROM = owner country or province if there's a minority expulsion source, fires when the colony is created
on_colony_established = {
}

#scope = new country, FROM = parent country
on_colonial_nation_established = {
}

##scope = colony province, FROM = owner country or province if there's a minority expulsion source
on_colonist_boosting_colony = {
	on_colonist_boosting_colony_effect = yes
}

#ROOT = converted country, FROM = country which force converts ROOT, on_action gets called on Force religion peace and Enforce Religion subject interaction
on_force_conversion = {
	on_force_conversion_effect = yes
}

on_institution_embracement = {}
on_national_focus_change = {}

#ROOT = new capital province, FROM = old capital
on_capital_moved = {
	if = { limit = { has_global_flag = enable_onaction_logging } log = "ON_ACTIONS - province : [Root.GetName] - owner : [Owner.GetName] - old owner : [From.GetName] - on_capital_moved" }

	FROM = {
		remove_building = capital_1_building
		remove_building = capital_2_building
		remove_building = capital_3_building

		remove_building = capital_1_dwarf_building
		remove_building = capital_2_dwarf_building
		remove_building = capital_3_dwarf_building

		remove_building = capital_1_elf_building
		remove_building = capital_2_elf_building
		remove_building = capital_3_elf_building

		remove_building = capital_1_orc_building
		remove_building = capital_2_orc_building
		remove_building = capital_3_orc_building
	}

	on_capital_moved_effect = yes
}

#ROOT = province that was expanded in, FROM = country that did it
on_expanded_infrastructure = {
}
on_expanded_infrastructure_removed = {
}

#ROOT = province that was centralized in
on_centralized_state = {
}

#ROOT = country
monarch_on_shipwreck = {
}
heir_on_shipwreck = {
}
consort_on_shipwreck = {
}

#ROOT = country
on_defender_of_faith_loss = {
	on_defender_of_faith_loss_effect = yes
}
on_defender_of_faith_claim = {
	on_defender_of_faith_claim_effect = yes
}
on_hre_dismantled = {
}
on_new_age = {
}

#ROOT = province
on_adm_exploited = {
	if = {
		limit = {
			check_variable = {
				which = customui_province_status_variable
				value = 1
			}
		}
		customui_province_status_calculate_progression_effect = yes
	}
}
on_dip_exploited = {
	if = {
		limit = {
			check_variable = {
				which = customui_province_status_variable
				value = 1
			}
		}
		customui_province_status_calculate_progression_effect = yes
	}
}
on_mil_exploited = {
	if = {
		limit = {
			check_variable = {
				which = customui_province_status_variable
				value = 1
			}
		}
		customui_province_status_calculate_progression_effect = yes
	}
}
on_raze = {
	add_permanent_province_modifier = {
		name = province_razed
		duration = 7300
	}
}
on_concentrate_development = {
	if = { 
		limit = { 
			owner = { has_country_modifier = fra_french_isles_modifier }
		}
		add_nationalism = -5
	}
}

on_slacken_start = {
	add_country_modifier = {
		name = slackening_modifier
		duration = -1
	}
}
on_slacken_stop = {
	remove_country_modifier = slackening_modifier
}

on_colony_finished = { #ROOT - Province
	on_colony_finished_effect = yes
}

on_advisor_hired = { #ROOT - Country

}

on_adm_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!

}

on_dip_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!

}

on_mil_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!

}

on_core = { #ROOT - Province, #FROM - Country that gets the core

}

on_tech_taken = { #ROOT - Country

}

on_adm_tech_taken = { #ROOT - Country, executed after on_tech_taken!

}

on_dip_tech_taken = { #ROOT - Country, executed after on_tech_taken!

}

on_mil_tech_taken = { #ROOT - Country, executed after on_tech_taken!

} 

on_barrage = { #ROOT - barraging country, FROM - barraged province 

}

on_naval_barrage = { #ROOT - barraging country, FROM - barraged province 

}

on_scorch_earth  = { #ROOT - scorching country, FROM - scorched province
	if = { 
		limit = {
			ROOT = {
				tag = ANG
			}
			FROM = {
				superregion = eriador_superregion
				has_terrain = unique_dunedain_ruin
			}
		}
		FROM = {
			province_event = {
				id = LOU_mission_angmar.2
			}
		}
	}
}

on_war_ended = { #ROOT - Winer FROM - Loser
	
}

on_alliance_broken = { #ROOT - Original alliance creator, FROM - Alliance accepter
	on_alliance_broken_effect = yes
}

on_royal_marriage_broken = { #ROOT - Original marriage creator, FROM - Marriage accepter
}

on_alliance_created = { #ROOT - Alliance sender, FROM - Alliance accepter

}

on_royal_marriage = { #ROOT - Marraige sender, FROM - marriage accepter

}

on_heir_disinherited = {
	on_heir_disinherited_or_death_effect = yes
}
on_overrun = { #ROOT - winner, FROM - loser, on stackwipe
	
}