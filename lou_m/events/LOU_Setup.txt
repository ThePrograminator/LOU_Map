namespace = LOU_setup

# Add global start-up stuff here
country_event = {
	id = LOU_setup.1
    title = dummy.1.t
	desc = dummy.1.d
    picture = COMET_SIGHTED_eventPicture
    
    hidden = yes
    is_triggered_only = yes

    trigger = {
        NOT = { has_global_flag = completed_LOU_setup }
    }

    immediate = {
        set_global_flag = completed_LOU_setup
    }

    option = {
        name = "LOU_setup.1.a"
        
        every_country = {
            country_event = { id = LOU_setup.2 }
            country_event = { id = lou_colonization.1 }
        }
        
        # --- Logging flags
        #   Comment these for release builds
        #   Enabling these will spam the game.log
        #set_global_flag = enable_onaction_logging
        #set_global_flag = enable_event_logging
        
        # Power system flag
        # set_global_flag = power_enabled

        if = { limit = { has_global_flag = enable_event_logging } log = "[Root.GetName] - Global LOU_setup" }
    }  
}

# Add country-specific start-up stuff here
country_event = {
	id = LOU_setup.2
    title = dummy.1.t
	desc = dummy.1.d
    picture = COMET_SIGHTED_eventPicture
    
    hidden = yes
    is_triggered_only = yes

    trigger = {
        NOT = { has_country_flag = completed_country_LOU_setup }
    }

    immediate = {
        set_country_flag = completed_country_LOU_setup
    }

    option = {
        name = "LOU_setup.2.a"
        
        if = { limit = { has_global_flag = enable_event_logging } log = "[Root.GetName] - Start LOU_setup" }
        
        # Hatred          
        set_against_race_opinions_effect = yes 
        set_free_peoples_opinions_effect = yes
        set_servants_of_darkness_opinions_effect = yes
        
        # Human
        if = {
            limit = {
                NOT = {	has_country_modifier =  "human_buff" }
                is_human = yes
                NOT = {
                    primary_culture = culture_beornings
                }
                NOT = {
                    culture_group = culture_group_numenorean
                }
            }
            country_event = { 
                id = LOU_races.1
            }
        }
        # DÃºnedain
        if = {
            limit = {
                NOT = {	has_country_modifier =  "human_buff" }
                is_human = yes
                culture_group = culture_group_numenorean
                NOT = {
                    primary_culture = culture_beornings
                }
            }
            country_event = { 
                id = LOU_races.19
            }
        }
        # Beorning
        if = {
            limit = {
                NOT = {	has_country_modifier =  "human_buff" }
                is_human = yes
                primary_culture = culture_beornings
            }
            country_event = { 
                id = LOU_races.18
            }
        }
        # Dwarven
        if = {
            limit = {
                NOT = {	has_country_modifier =  "dwarven_buff" }
                is_dwarf = yes
            }
            country_event = { 
                id = LOU_races.2
            }
        }
        # Dragon
        if = {
            limit = {
			NOT = {	has_country_modifier =  "dragon_buff" }
			technology_group = lotr_dragon
		}
		country_event = { 
			id = LOU_races.3
		}
        }
        # Elven
        if = {
            limit = {
                NOT = {	has_country_modifier =  "elven_buff" }
                is_elf = yes
            }
            country_event = { 
                id = LOU_races.4
            }
        }
        # Ent
        if = {
            limit = {
                NOT = {	has_country_modifier =  "ent_buff" }
                is_ent = yes
            }
            country_event = { 
                id = LOU_races.5
            }
        }
        # Eru's Children
        if = {
            limit = {
                NOT = {	has_country_modifier =  "erus_children_buff" }
                is_erus_children = yes
            }
            country_event = { 
                id = LOU_races.6
            }
        }
        # Goblin
        if = {
            limit = {
                NOT = {	has_country_modifier =  "goblin_buff" }
                is_goblin = yes
            }
            country_event = { 
                id = LOU_races.7
            }
        }
        # Giant
        if = {
            limit = {
                NOT = {	has_country_modifier =  "giant_buff" }
                technology_group = lotr_giant
            }
            country_event = { 
                id = LOU_races.8
            }
        }
        # Great Spider
        if = {
            limit = {
                NOT = {	has_country_modifier =  "great_spider_buff" }
                is_great_spider = yes
            }
            country_event = { 
                id = LOU_races.9
            }
        }
        # Half Dwarf
        if = {
            limit = {
                NOT = {	has_country_modifier =  "half_dwarf_buff" }
                technology_group = lotr_half_dwarf
            }
            country_event = { 
                id = LOU_races.10
            }
        }
        # Hobbit
        if = {
            limit = {
                NOT = {	has_country_modifier =  "hobbit_buff" }
                is_hobbit = yes
            }
            country_event = { 
                id = LOU_races.11
            }
        }
        # Half Orc
        if = {
            limit = {
                NOT = {	has_country_modifier =  "half_orc_buff" }
                technology_group = lotr_half_orc
            }
            country_event = { 
                id = LOU_races.12
            }
        }
        # Orc
        if = {
            limit = {
                NOT = {	has_country_modifier =  "orc_buff" }
                is_orc = yes
            }
            country_event = { 
                id = LOU_races.13
            }
            if = {
                limit = {
                    government = native
                }
                set_variable = {
                    which = MigratingOrcShirelootedAmount_VAR
                    value = 0
                }
                set_variable = {
                    which = MigratingOrcCardolanlootedAmount_VAR
                    value = 0
                }
            }
        }
        # Troll
        if = {
            limit = {
                NOT = {	has_country_modifier =  "troll_buff" }
                technology_group = lotr_troll
            }
            country_event = { 
                id = LOU_races.14
            }
        }
        # Uruk-hai
        if = {
            limit = {
                NOT = {	has_country_modifier =  "uruk_hai_buff" }
                technology_group = lotr_uruk_hai
            }
            country_event = { 
                id = LOU_races.15
            }
        }
        # Wizard
        if = {
            limit = {
                NOT = {	has_country_modifier =  "wizard_buff" }
                is_wizard = yes
            }
            country_event = { 
                id = LOU_races.16
            }
        }
        # Wights
        if = {
            limit = {
                NOT = {	has_country_modifier =  "wights_buff" }
                is_wight = yes
            }
            country_event = { 
                id = LOU_races.17
            }
        }
    }  
}

# Flag Setup
country_event = {
	id = LOU_setup.3
    title = dummy.1.t
	desc = dummy.1.d
    picture = COMET_SIGHTED_eventPicture
    
    hidden = yes
	is_triggered_only = yes

    trigger = {
        NOT = { has_global_flag = completed_lotr_flag_setup }
    }

    immediate = {
        set_global_flag = completed_lotr_flag_setup
    }

    option = {
        name = "LOU_setup.3.a"
        
        trigger_switch = {
			on_trigger = started_in
			2954.1.1 = { setup_global_flag_after_2953 = yes}
			2942.1.1 = { setup_global_flag_after_2941 = yes}
			2943.1.1 = { setup_global_flag_after_2942 = yes}
			2794.1.1 = { setup_global_flag_after_2793 = yes}
			2771.1.1 = { setup_global_flag_after_2770 = yes}
			2760.1.1 = { setup_global_flag_after_2759 = yes}
		}
    }  
}

# Test is_free_peoples_opinion
country_event = {
	id = LOU_setup.4
    title = dummy.1.t
	desc = dummy.1.d
    picture = COMET_SIGHTED_eventPicture
    
	is_triggered_only = yes

    trigger = {
        test_only_is_free_peoples_opinion_test_only = yes
    }

    option = {
        name = "LOU_setup.4.a"
        
    }  
}

# Test is_servants_of_evil_opinion
country_event = {
	id = LOU_setup.5
    title = dummy.1.t
	desc = dummy.1.d
    picture = COMET_SIGHTED_eventPicture
    
	is_triggered_only = yes

    trigger = {
        test_only_is_servants_of_evil_opinion_test_only = yes
    }

    option = {
        name = "LOU_setup.5.a"
        
    }  
}

# Apply Dwarven hold Variables
country_event = {
	id = LOU_setup.6
    title = dummy.1.t
	desc = dummy.1.d
    picture = COMET_SIGHTED_eventPicture
    
    fire_only_once = yes
    hidden = yes
	is_triggered_only = yes

    trigger = {
        
    }

    option = {
        name = "LOU_setup.6.a"
        log = "LOU_setup.6 - Dwarven Hold Setup Event"

        hold_province_group = {
            province_event = {
                id = LOU_setup.7
            }
        }
    }  
}

# Apply Dwarven hold Variables
province_event = {
	id = LOU_setup.7
    title = dummy.1.t
	desc = dummy.1.d
    picture = COMET_SIGHTED_eventPicture
    
    hidden = yes
	is_triggered_only = yes

    trigger = {
        NOT = {
            has_province_flag = has_dwarven_hold_flag
        }
    }

    option = {
        name = "LOU_setup.7.a"

        log = "LOU_setup.7 - [Root.GetName] - Apply Dwarven Hold Variable" 

        customui_setup_variables_dwarven_hold_effect = yes
    }  
}

# Apply Dwarven Mountain Buildable Provinces
country_event = {
	id = LOU_setup.8
    title = dummy.1.t
	desc = dummy.1.d
    picture = COMET_SIGHTED_eventPicture
    
    hidden = yes
	is_triggered_only = yes
    fire_only_once = yes

    trigger = {
    }

    option = {
        name = "LOU_setup.8.a"

        log = "LOU_setup.8 - [Root.GetName] - Apply Mountain Buildable Provinces" 

        every_province = {
            limit = {
                NOT = {
                    OR = {
                        is_wasteland = yes
                        is_sea = yes
                    }
                }
                province_dwarf_has_mountains_terrain = yes
            }
            set_province_flag = dwarf_mountain_buildable_province_flag
        }
        
    }  
}